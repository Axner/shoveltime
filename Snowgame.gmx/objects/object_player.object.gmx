<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_player_shovel</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>movespeed = 6;
depth = -1000;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_right = keyboard_check(vk_right);
key_left = keyboard_check(vk_left);
key_up = keyboard_check(vk_up);
key_down = keyboard_check(vk_down);

movement_right = key_right;
movement_left = -1*key_left;
movment_up = -1*key_up;
movement_down = key_down;

move_horizontal = movement_left + movement_right;
move_vertical = movment_up + movement_down;

x_speed = move_horizontal * movespeed;
y_speed = move_vertical * movespeed;


current_street_position = instance_place(x, y, object_street_parent);
if current_street_position != noone {
    gathered_snow = current_street_position.snow;
}

next_vertical_position = instance_place(x, y+y_speed, object_street_parent);
next_horizontal_position = instance_place(x+x_speed, y, object_street_parent);

if current_street_position != next_vertical_position &amp;&amp; next_vertical_position != noone {
next_vertical_position.snow += gathered_snow;
current_street_position.snow = 0;
gathered_snow = 0;
}
else if current_street_position != next_horizontal_position &amp;&amp; next_horizontal_position != noone{
next_horizontal_position.snow += gathered_snow;
current_street_position.snow = 0;
gathered_snow = 0;
}


/*
Handle vertical collisions.
*/

if place_meeting(x, y+y_speed, object_grass) {
    receiving_grass_object = instance_place(x, y+y_speed, object_grass);
    receiving_grass_object.snow += gathered_snow;
    current_street_position.snow = 0;
    gathered_snow = 0;
    while !place_meeting(x, y+sign(y_speed), object_grass) {
        y += sign(y_speed);
    }
    y_speed = 0;
}

    
/*
Handle horizontal collisions.
*/
if place_meeting(x+x_speed,y,object_grass) {

    receiving_grass_object = instance_place(x+x_speed, y, object_grass);
    receiving_grass_object.snow += gathered_snow;
    current_street_position.snow = 0;
    gathered_snow = 0;
    
    while(!place_meeting(x+sign(x_speed),y,object_grass))
    {
        x += sign(x_speed);
    }
    x_speed = 0;
}
/*
Move
*/
y += y_speed;
x += x_speed;


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
